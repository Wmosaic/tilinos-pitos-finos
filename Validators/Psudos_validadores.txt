//Psudos Sobre los validadores
//Verifica las sintaxisi para cada metodo a ver si esta perron asi como lo hicimos

//Cada parametro de un metodo sirve para 
//identificar el tipo de dato del parametro o de la variable en cuestion 

1.(Privado) isNum(cadena:String) 
	Intentar
		cadena.convertirANumero()
		regresar Verdadero
	Exepcion
		regresar Falso

2.(Privado) isNom(cadena:String)
	//Esta es una forma para determinar los metodos tipo el lenguaje
	//Uno es como Python y otro tipo Java o C++
	Si EsNumero(cadena) == Verdadero Y cadena.longitud() > 0
		retornar Verdadero
	De lo contrario
		retornar Falso

3.(Publico) capNumero(mensaje:String)
	//La variable texto tiene como funcion mandar un mensaje a pantalla de lo que se solicita
	imprimir mensaje
	leer variable
	
	Mientras isNum(variable) == Falso Empezar
		imprimir mensaje
		leer variable
	Terminar Mientras

	regresar variable.convertidoANumero()

3.1(Publico-Sobrecargado) capNumero(mensaje: String, lim:int)
	imprimir mensaje
	leer variable

	Mientras isNum(variable) == Falso Empezar
		imprimir mensaje
		leer variable
	Terminar Mientras

//En automatico al salir del primer mientras se sabe que es un numero
//Y puede ser comparado con los operadores racionales

	Mientras variable.convertidoANumero() <= lim Empezar 
		imprimir "Deber ser mayor a "+lim
		leer variable
	Terminar Mientras

	regresar variable.convertidoANumero()

3.2(Publico-Sobrecargado) capNumero(mensaje: String, limI:int, limS:int)
	imprimir mensaje
	leer variable

	Mientras isNum(variable) == Falso Empezar
		imprimir mensaje
		leer variable
	Terminar Mientras

	//En automatico al salir del primer mientras se sabe que es un numero
	//Y puede ser comparado con los operadores racionales

			//No es negacion
	Mientras NO(limI <= variable.convertidoANumero() <= limS) Empezar 
		imprimir "Deber estar entre "+limI +" y "+limS
		leer variable
	Terminar Mientras

	regresar variable.convertidoANumero()

4.(Publico) capNom(mensaje:String)
	imprimir mensaje
	leer variable

	Mientras isNom(variable) == Falso Empezar
		imprimir mensaje
		leer variable
	Terminar Mientras

	regresar variable







		
	

